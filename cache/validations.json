{
  "version": "3.2",
  "log": [
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:10",
        "version": {
          "withMetadata": "ffed832e11d4911fc4f8713d326800a2582b4aa1b1fa1cc7f1f936dfc60b594d",
          "withoutMetadata": "55f71f599ac1f1f9bf865b72cbd79a73da14f4d5030a8f511e862ff04d940b76",
          "linkedWithoutMetadata": "55f71f599ac1f1f9bf865b72cbd79a73da14f4d5030a8f511e862ff04d940b76"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:10",
        "version": {
          "withMetadata": "ffed832e11d4911fc4f8713d326800a2582b4aa1b1fa1cc7f1f936dfc60b594d",
          "withoutMetadata": "55f71f599ac1f1f9bf865b72cbd79a73da14f4d5030a8f511e862ff04d940b76",
          "linkedWithoutMetadata": "55f71f599ac1f1f9bf865b72cbd79a73da14f4d5030a8f511e862ff04d940b76"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "ed152a8479502724bd4144f720d6694b7988d21662edcc80093070ba383c5627",
          "withoutMetadata": "150559efb3cfaa08f38ecfe7149afe52a7fc43c483a713c8222808b2c434481d",
          "linkedWithoutMetadata": "150559efb3cfaa08f38ecfe7149afe52a7fc43c483a713c8222808b2c434481d"
        },
        "inherit": [],
        "libraries": [
          "console",
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "22213968784a1c699f23bf7d53b983851ef8a6e6e76db5ce2e4d7d5c0b40cb42",
          "withoutMetadata": "dc88aa72bee3e88e833325bd9e25f3862d52e90b0882d9f530943e10241584b1",
          "linkedWithoutMetadata": "dc88aa72bee3e88e833325bd9e25f3862d52e90b0882d9f530943e10241584b1"
        },
        "inherit": [],
        "libraries": [
          "console",
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "1791279bb3bf5bc505e5bf5830dfc84231e822cb7699ec7f244e4905ff559a78",
          "withoutMetadata": "e39164124db62a7d8ee3226098a4dbcc2dd7b8c14bedc36e9b2e2af06bbf2e6f",
          "linkedWithoutMetadata": "e39164124db62a7d8ee3226098a4dbcc2dd7b8c14bedc36e9b2e2af06bbf2e6f"
        },
        "inherit": [],
        "libraries": [
          "console",
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "4cb9a9ae3a15ba1c3240ac17f03b6a0be07550e694390a27f8b2a92d13109330",
          "withoutMetadata": "ab32336f501d39c8a90b40f7f13b868d811e0e77085562e9c796ef5e3065bd3e",
          "linkedWithoutMetadata": "ab32336f501d39c8a90b40f7f13b868d811e0e77085562e9c796ef5e3065bd3e"
        },
        "inherit": [],
        "libraries": [
          "console",
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "6f3f8b93234ea2d652043f4b11e306c0e3bcaee8f43507072d137041dc072476",
          "withoutMetadata": "50f46079c2ccfcac41a9a9a33faacfdd68e2c9fa39fe349266fde839cd89fab7",
          "linkedWithoutMetadata": "50f46079c2ccfcac41a9a9a33faacfdd68e2c9fa39fe349266fde839cd89fab7"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "ecf302ea1e7784c8d9c2a90a947c8bd37703e46e44624c2a53e20fe639ca26f4",
          "withoutMetadata": "50f46079c2ccfcac41a9a9a33faacfdd68e2c9fa39fe349266fde839cd89fab7",
          "linkedWithoutMetadata": "50f46079c2ccfcac41a9a9a33faacfdd68e2c9fa39fe349266fde839cd89fab7"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "8d6a124dad2ad3372d23cd7df35a2859c22c70f16331895c9f15e91fdd4aa6dd",
          "withoutMetadata": "2a36c888ecf639b19e75b5a3b8eb133de84d68f1baf20cd7a213683322daae22",
          "linkedWithoutMetadata": "2a36c888ecf639b19e75b5a3b8eb133de84d68f1baf20cd7a213683322daae22"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "0e13e76a6dc717a67cbe36d61e249a5d9e9f5f80158c077e1118ca39a39a7722",
          "withoutMetadata": "aed712d78f4962a7db9d8488494815631a3af3fae476eecad6a9937f6688b287",
          "linkedWithoutMetadata": "aed712d78f4962a7db9d8488494815631a3af3fae476eecad6a9937f6688b287"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "b1e910bb4b52b08ab98f6b16e94ad5005d652401f6f1e1e177e9672e1346da38",
          "withoutMetadata": "5a9e188057b3821c60dcb0498b024f9f26121d723a090ebbdc4784c68aca7aca",
          "linkedWithoutMetadata": "5a9e188057b3821c60dcb0498b024f9f26121d723a090ebbdc4784c68aca7aca"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "getSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "87d8fbd1e2c641050e061a5a3c1dd8be52678f760c274761cbaf871c13330886",
          "withoutMetadata": "b0ea0147b9b7dae3f82a2e09a6066f11cbea0b4fed0c369a8826cf7213941f3d",
          "linkedWithoutMetadata": "b0ea0147b9b7dae3f82a2e09a6066f11cbea0b4fed0c369a8826cf7213941f3d"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes,address)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:11",
        "version": {
          "withMetadata": "ff801bb5c28599f9808ca7c1284e2cc73a2afe7d3312976e0ec4618d72f1b289",
          "withoutMetadata": "548c421bd7861eca3f881df51a896493a29b6cda8c55107b8c0cb1ac0c0e7e27",
          "linkedWithoutMetadata": "548c421bd7861eca3f881df51a896493a29b6cda8c55107b8c0cb1ac0c0e7e27"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "()",
          "setSigner(address,address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes,address)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "signers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "4bdec2315a6df980678f0cf702f661f470e8f3e9e913be18828c5ea1804a6708",
          "withoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8",
          "linkedWithoutMetadata": "f8c73f1defce19f36f64fce5a1353e645290cbf94bd5aaad33e92e2c67bba2e8"
        },
        "inherit": [],
        "libraries": [
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts/unlock/UnlockV11.sol:123",
        "version": {
          "withMetadata": "eaa58b13834e2a43aac34da614787eeeb45dd05fbe855121c970ddb2f87ca2aa",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/unlock/UnlockV11.sol:300"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1007",
        "version": {
          "withMetadata": "a7a43a85f7c28c2d92556446385e45eefb555cadd94bd1d1e1ac9f18ff18eec9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/unlock/UnlockV11.sol:797",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:632",
        "version": {
          "withMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "withoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1",
          "linkedWithoutMetadata": "d4229c36e608310018435111e87853e6cc3c8c2d3ae672830d8c15083bc6c7f1"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/unlock/UnlockV11.sol:639"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "contracts/unlock/UnlockV11.sol:439",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "contracts/unlock/UnlockV11.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMintableERC20": {
        "src": "contracts/unlock/UnlockV11.sol:1981",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "contracts/unlock/UnlockV11.sol:1409",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapOracle": {
        "src": "contracts/unlock/UnlockV11.sol:974",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PERIOD()",
          "factory()",
          "update(address,address)",
          "consult(address,uint256,address)",
          "updateAndConsult(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/unlock/UnlockV11.sol:827",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/unlock/UnlockV11.sol:835"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Proxy": {
        "src": "contracts/unlock/UnlockV11.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ProxyAdmin": {
        "src": "contracts/unlock/UnlockV11.sol:898",
        "version": {
          "withMetadata": "df70e498036df7f014c3f4dfed94405f8a6d6d99be088c888818cff1f0d79765",
          "withoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8",
          "linkedWithoutMetadata": "7773ccfac303553ebdacb1b2cb154372588a27831ce6cef77acd73bda89786d8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/unlock/UnlockV11.sol:828"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlot": {
        "src": "contracts/unlock/UnlockV11.sol:367",
        "version": {
          "withMetadata": "50671c80f56a21080440ab3584706d480edb4832cd5172852e2c549a7a296f5a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransparentUpgradeableProxy": {
        "src": "contracts/unlock/UnlockV11.sol:681",
        "version": {
          "withMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "withoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d",
          "linkedWithoutMetadata": "9cdaa8957d3c3ee0dab95aac7ac4031ccd245210fa8dbc91da7ccf542907895d"
        },
        "inherit": [
          "ERC1967Proxy",
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/unlock/UnlockV11.sol:686"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Unlock": {
        "src": "contracts/unlock/UnlockV11.sol:2029",
        "version": {
          "withMetadata": "637f2725ae03283fcf9d1db062c2b0eb5e10afe272c1717e6122184a3a47cbbd",
          "withoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c",
          "linkedWithoutMetadata": "6adc7240e0c0d895c776991aa58b7c5d0eb34acd4f80ed677fbfdd3b9235fe0c"
        },
        "inherit": [
          "UnlockOwnable",
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "initializeProxyAdmin()",
          "publicLockVersions(address)",
          "publicLockImpls(uint16)",
          "addLockTemplate(address,uint16)",
          "createLock(uint256,address,uint256,uint256,string,bytes12)",
          "createUpgradeableLock(bytes)",
          "createUpgradeableLockAtVersion(bytes,uint16)",
          "upgradeLock(address payable,uint16)",
          "computeAvailableDiscountFor(address,uint256)",
          "networkBaseFee()",
          "recordKeyPurchase(uint256,address)",
          "recordConsumedDiscount(uint256,uint256)",
          "unlockVersion()",
          "configUnlock(address,address,uint256,string,string,uint256)",
          "setLockTemplate(address)",
          "setOracle(address,address)",
          "resetTrackedValue(uint256,uint256)",
          "getGlobalBaseTokenURI()",
          "getGlobalTokenSymbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            },
            {
              "label": "grossNetworkProduct",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2052"
            },
            {
              "label": "totalDiscountGranted",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2054"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_struct(LockBalances)2432_storage)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2057"
            },
            {
              "label": "globalBaseTokenURI",
              "offset": 0,
              "slot": "105",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2061"
            },
            {
              "label": "globalTokenSymbol",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2065"
            },
            {
              "label": "publicLockAddress",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2068"
            },
            {
              "label": "uniswapOracles",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_contract(IUniswapOracle)1270)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2072"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2075"
            },
            {
              "label": "udt",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2078"
            },
            {
              "label": "estimatedGasForPurchase",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2081"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2084"
            },
            {
              "label": "proxyAdminAddress",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2087"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "114",
              "type": "t_contract(ProxyAdmin)1229",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2088"
            },
            {
              "label": "_publicLockVersions",
              "offset": 0,
              "slot": "115",
              "type": "t_mapping(t_address,t_uint16)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2091"
            },
            {
              "label": "_publicLockImpls",
              "offset": 0,
              "slot": "116",
              "type": "t_mapping(t_uint16,t_address)",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2092"
            },
            {
              "label": "publicLockLatestVersion",
              "offset": 0,
              "slot": "117",
              "type": "t_uint16",
              "contract": "Unlock",
              "src": "contracts/unlock/UnlockV11.sol:2093"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapOracle)1270": {
              "label": "contract IUniswapOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)1229": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IUniswapOracle)1270)": {
              "label": "mapping(address => contract IUniswapOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockBalances)2432_storage)": {
              "label": "mapping(address => struct Unlock.LockBalances)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint16)": {
              "label": "mapping(address => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_address)": {
              "label": "mapping(uint16 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockBalances)2432_storage": {
              "label": "struct Unlock.LockBalances",
              "members": [
                {
                  "label": "deployed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalSales",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "yieldedDiscountTokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockContextUpgradeable": {
        "src": "contracts/unlock/UnlockV11.sol:1290",
        "inherit": [
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockInitializable": {
        "src": "contracts/unlock/UnlockV11.sol:1225",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlockOwnable": {
        "src": "contracts/unlock/UnlockV11.sol:1329",
        "inherit": [
          "UnlockContextUpgradeable",
          "UnlockInitializable"
        ],
        "libraries": [],
        "methods": [
          "__initializeOwnable(address)",
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1229"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "UnlockInitializable",
              "src": "contracts/unlock/UnlockV11.sol:1234"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockContextUpgradeable",
              "src": "contracts/unlock/UnlockV11.sol:1304"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1330"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UnlockOwnable",
              "src": "contracts/unlock/UnlockV11.sol:1393"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "4a26bb39c38c99454c7d02ffd0dab21f159d85e65fde7b74e3551f1f63418b07",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8b28e6d3d8e4e47af268d8585b0d3cb0b2a53c6805edd252a6bc973b394edf18",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPublicLock": {
        "src": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV10.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,address,uint256,uint256,string)",
          "DEFAULT_ADMIN_ROLE()",
          "KEY_GRANTER_ROLE()",
          "LOCK_MANAGER_ROLE()",
          "publicLockVersion()",
          "withdraw(address,uint256)",
          "approveBeneficiary(address,uint256)",
          "updateKeyPricing(uint256,address)",
          "setExpirationDuration(uint256)",
          "updateBeneficiary(address)",
          "getHasValidKey(address)",
          "keyExpirationTimestampFor(uint256)",
          "numberOfOwners()",
          "updateLockName(string)",
          "updateLockSymbol(string)",
          "symbol()",
          "setBaseTokenURI(string)",
          "tokenURI(uint256)",
          "setEventHooks(address,address,address,address)",
          "grantKeys(address[],uint256[],address[])",
          "purchase(uint256[],address[],address[],address[],bytes[])",
          "extend(uint256,uint256,address,bytes)",
          "mergeKeys(uint256,uint256,uint256)",
          "burn(uint256)",
          "setGasRefundValue(uint256)",
          "gasRefundValue()",
          "purchasePriceFor(address,address,bytes)",
          "updateTransferFee(uint256)",
          "getTransferFee(uint256,uint256)",
          "expireAndRefundFor(uint256,uint256)",
          "cancelAndRefund(uint256)",
          "updateRefundPenalty(uint256,uint256)",
          "getCancelAndRefundValue(address)",
          "addKeyGranter(address)",
          "addLockManager(address)",
          "isKeyGranter(address)",
          "isLockManager(address)",
          "onKeyPurchaseHook()",
          "onKeyCancelHook()",
          "onValidKeyHook()",
          "onTokenURIHook()",
          "revokeKeyGranter(address)",
          "renounceLockManager()",
          "setMaxNumberOfKeys(uint256)",
          "setMaxKeysPerAddress(uint256)",
          "maxKeysPerAddress()",
          "beneficiary()",
          "expirationDuration()",
          "freeTrialLength()",
          "keyPrice()",
          "maxNumberOfKeys()",
          "refundPenaltyBasisPoints()",
          "tokenAddress()",
          "transferFeeBasisPoints()",
          "unlockProtocol()",
          "keyManagerOf(uint256)",
          "shareKey(address,uint256,uint256)",
          "setKeyManagerOf(uint256,address)",
          "isValidKey(uint256)",
          "name()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "hasRole(bytes32,address)",
          "transfer(address,uint256)",
          "owner()",
          "setOwner(address)",
          "isOwner(address)",
          "migrate(bytes)",
          "schemaVersion()",
          "updateSchemaVersion()",
          "renewMembershipFor(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PurchaseHook": {
        "src": "contracts/PurchaseHook.sol:8",
        "version": {
          "withMetadata": "ca8661fbbcf2261d3fd5ad30820becadc5fed069dc874d15241fa69dfe692250",
          "withoutMetadata": "89b4d34ef68204291af64f59155532d7d74ea2a7e554b6fe4feb96f9ea542e50",
          "linkedWithoutMetadata": "89b4d34ef68204291af64f59155532d7d74ea2a7e554b6fe4feb96f9ea542e50"
        },
        "inherit": [],
        "libraries": [
          "console",
          "ECDSA"
        ],
        "methods": [
          "(address)",
          "keyPurchasePrice(address,address,address,bytes)",
          "checkIsSigner(string,bytes)",
          "toString(address)",
          "toString(uint256)",
          "toString(bytes32)",
          "toString(bytes)",
          "onKeyPurchase(address,address,address,bytes,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PurchaseHook",
            "src": "contracts/PurchaseHook.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretSigner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PurchaseHook",
              "src": "contracts/PurchaseHook.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}